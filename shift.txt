--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\57\66\57\88\48\120\99\109\47\121\67\104\83\108\108\78\85\86\89\76\51\106\101\66\70\70\87\88\68\84\52\102\79\80\48\118\71\109\110\71\88\85\122\47\87\103\50\109\121\52\102\86\51\82\54\112\84\101\73\53\111\48\55\82\104\56\119\52\97\65\122\43\80\72\69\79\53\99\77\70\111\55\109\119\88\104\43\112\65\118\50\104\69\108\79\102\105\67\51\74\68\99\111\104\76\100\87\78\113\117\115\67\109\50\70\86\49\122\121\70\54\67\74\77\107\80\112\56\114\100\100\73\109\81\69\99\121\85\83\66\53\50\119\84\85\98\76\90\99\106\115\114\85\71\108\71\113\89\115\54\66\97\77\74\111\100\103\97\71\67\118\56\83\73\99\74\69\120\77\70\49\103\86\110\111\109\119\89\108\66\104\89\81\52\119\49\47\89\103\67\74\99\43\114\86\66\85\118\90\104\121\110\112\49\53\65\66\56\97\100\115\121\78\65\112\81\98\55\78\112\49\104\81\122\100\120\107\68\69\71\116\109\79\75\90\105\112\82\116\52\105\55\69\68\120\57\122\51\107\85\67\56\79\65\75\54\119\83\111\77\49\47\99\112\66\101\86\74\48\87\56\43\88\51\83\102\109\51\70\117\110\74\49\77\53\80\110\101\84\79\53\101\54\120\115\80\71\88\78\88\121\73\103\51\112\51\104\51\118\87\98\101\50\57\54\71\88\103\71\89\83\87\113\51\90\80\87\69\80\54\51\114\78\102\67\100\106\76\100\85\108\114\85\53\50\52\48\52\77\102\108\112\115\48\121\114\55\49\110\79\47\104\117\110\70\113\102\118\50\71\56\105\114\77\80\90\102\43\50\98\101\69\47\85\104\51\109\89\118\110\84\108\72\53\79\116\52\113\55\75\103\89\104\120\112\56\104\121\79\48\118\106\98\79\68\69\109\85\103\86\88\68\77\80\116\71\88\109\50\115\121\43\65\76\102\66\43\57\71\56\113\49\88\80\117\106\109\87\83\74\86\57\69\99\50\87\119\122\118\57\122\104\50\107\120\76\55\57\98\56\104\66\101\116\111\65\72\69\115\54\66\89\100\81\102\87\122\84\70\47\117\90\101\111\108\89\49\121\57\56\43\122\106\118\78\120\81\80\104\69\74\43\114\55\77\73\66\72\109\78\106\74\106\79\57\98\68\57\50\77\114\69\105\120\109\111\82\67\50\109\65\43\107\75\52\57\47\77\103\111\114\113\51\66\75\97\121\104\104\88\57\53\120\72\109\74\110\56\112\82\88\53\77\55\121\112\75\116\118\86\90\113\115\68\81\52\67\75\71\115\113\86\69\101\112\47\88\116\57\50\50\108\120\90\102\67\52\74\111\120\47\72\81\105\47\84\73\80\99\115\50\117\103\115\88\84\101\71\49\107\115\83\88\114\87\109\119\102\75\121\103\90\107\88\112\119\54\77\87\121\116\79\106\108\52\76\111\102\116\107\102\115\88\69\65\79\118\54\86\67\80\115\54\53\83\122\66\105\79\111\103\79\116\108\118\122\49\66\115\104\71\49\72\114\80\108\74\108\86\99\43\105\52\115\82\106\47\55\115\65\78\75\50\119\116\53\102\73\83\119\48\75\118\90\108\98\86\100\98\66\86\66\87\69\82\110\115\74\108\53\43\105\98\101\115\105\77\69\66\110\84\119\110\67\51\75\73\75\77\108\75\107\52\53\98\51\98\111\51\74\70\101\116\110\109\75\119\77\52\109\50\68\52\67\70\111\107\77\114\121\54\80\110\106\80\102\72\72\66\69\101\71\113\114\82\111\113\109\57\108\49\120\108\77\110\65\43\81\110\81\108\52\112\105\73\107\83\97\112\49\84\43\110\99\104\78\116\77\118\72\52\98\99\120\47\67\108\100\43\102\113\69\85\104\82\77\48\51\104\53\80\56\113\101\87\55\65\82\116\119\107\117\105\117\73\74\50\77\87\98\105\122\87\111\86\80\43\52\56\120\67\99\49\112\117\98\76\76\74\47\88\56\47\97\84\76\66\67\108\118\71\88\121\119\99\121\49\106\70\74\109\122\54\75\101\81\78\71\104\80\112\114\49\78\66\117\109\56\107\109\111\48\82\108\43\52\73\97\86\72\111\43\122\52\49\100\53\57\86\43\114\43\56\114\104\54\50\65\101\111\71\102\106\108\118\115\57\82\97\75\83\106\89\48\115\113\103\80\48\97\104\121\71\97\78\107\70\108\117\119\89\79\82\112\77\71\79\52\111\90\118\76\43\106\117\113\65\51\117\104\113\65\86\79\90\57\52\70\88\50\65\56\57\79\56\114\90\86\75\86\75\75\48\78\106\115\115\107\88\66\55\89\122\122\108\122\88\72\122\54\72\87\113\115\98\109\70\116\83\76\49\104\86\79\121\50\120\105\79\54\97\72\87\119\49\116\49\47\52\105\43\119\77\116\86\80\88\112\112\84\66\115\84\54\122\51\89\122\81\89\52\98\75\115\102\56\97\100\43\52\102\66\114\100\48\49\84\100\80\108\103\108\108\106\119\55\116\103\70\55\99\54\66\102\71\53\83\76\84\82\67\117\77\73\49\79\88\75\121\122\110\53\98\66\57\53\70\99\120\114\90\114\122\53\70\102\49\65\54\119\104\97\108\112\47\51\48\110\112\121\54\55\56\111\110\50\48\86\53\116\109\110\117\121\117\47\107\120\98\87\68\89\69\117\117\53\106\111\90\49\120\53\104\119\50\53\49\108\79\120\116\118\111\81\49\88\110\47\48\118\70\47\75\72\89\67\54\111\115\71\102\108\82\117\82\118\122\75\71\81\118\67\99\117\79\85\86\116\68\81\43\99\55\90\76\48\87\111\118\65\86\109\122\66\104\81\85\77\82\85\56\74\87\70\57\121\116\71\90\120\48\86\74\85\43\84\56\81\52\54\78\83\98\50\48\111\117\82\88\76\117\55\106\68\53\99\110\69\65\72\74\97\76\57\51\100\72\106\116\72\104\112\103\76\112\87\67\50\57\103\88\51\120\83\71\65\122\49\47\102\83\81\99\100\74\117\119\116\110\104\79\89\100\114\113\121\119\100\108\106\66\67\87\55\108\52\99\111\115\80\103\117\70\106\77\81\86\54\48\77\109\53\48\67\89\73\119\74\112\69\84\68\112\85\90\102\119\77\85\111\118\53\85\76\118\85\84\108\68\75\114\48\72\84\101\106\73\81\102\75\68\113\76\117\87\47\108\105\57\103\81\101\90\114\70\82\55\84\118\81\56\115\120\116\57\105\107\85\88\67\67\76\109\57\80\74\113\75\119\117\77\73\114\69\114\72\43\89\107\120\88\75\74\50\105\112\53\65\88\75\119\112\66\50\87\85\72\65\79\116\102\100\55\74\67\99\117\76\114\68\68\98\97\120\71\113\82\76\108\88\117\54\53\81\90\67\66\53\101\85\73\49\108\75\101\117\103\106\82\85\118\109\102\79\54\112\49\116\69\73\121\56\108\73\110\120\76\107\75\114\116\104\90\79\71\73\57\72\120\110\74\74\79\86\83\73\66\105\90\56\98\86\52\117\87\102\54\121\79\56\70\87\122\118\90\89\88\55\53\120\98\70\79\121\122\121\84\88\57\48\43\86\72\98\48\81\68\84\71\106\66\81\48\43\74\108\67\101\73\103\69\86\72\69\101\115\71\87\110\98\113\43\47\111\119\43\82\119\80\110\118\106\79\84\117\56\104\114\48\122\48\105\98\116\79\74\85\105\81\79\99\90\110\115\87\113\74\110\88\89\97\97\73\78\109\116\104\82\47\51\83\68\113\102\88\87\43\116\50\68\112\119\110\119\106\70\87\80\101\111\103\90\66\105\73\103\82\78\112\122\79\49\114\52\87\52\121\104\81\117\111\90\67\114\108\74\47\120\52\70\105\53\48\119\106\89\51\73\112\113\78\77\71\66\79\107\90\47\116\74\51\43\65\56\78\88\110\113\50\66\116\73\48\84\43\110\105\75\121\52\88\108\43\112\54\49\80\86\50\120\115\83\67\85\52\113\54\90\100\113\65\122\104\69\90\72\69\49\79\84\72\106\101\88\121\99\56\98\85\106\116\54\120\78\74\105\110\110\81\117\107\121\116\79\117\99\117\66\86\54\102\118\54\82\51\122\111\49\78\55\98\97\122\72\84\78\79\85\89\114\107\67\84\103\47\88\51\116\86\73\81\121\68\103\55\109\115\118\112\113\73\108\77\51\110\66\120\69\118\81\56\97\73\107\118\117\103\107\105\80\112\71\121\85\110\115\55\108\105\82\100\65\117\78\51\55\77\85\56\85\52\108\117\90\102\109\67\100\110\54\73\122\49\69\50\66\120\74\74\74\52\51\120\113\111\111\80\53\74\108\106\48\110\79\113\98\53\83\114\97\74\112\55\69\67\98\53\101\57\86\114\88\54\53\109\87\86\118\81\120\113\69\109\51\111\43\97\115\54\109\49\102\73\112\79\83\120\52\112\74\78\88\116\67\114\75\74\72\49\97\89\70\49\120\53\79\120\78\121\78\43\82\79\108\114\101\114\68\56\110\86\65\77\82\51\107\48\76\70\108\79\98\47\55\75\74\47\118\106\82\122\116\75\119\67\90\99\82\78\86\87\112\86\107\111\86\87\53\87\98\103\99\80\104\100\90\99\80\85\87\89\80\43\67\57\106\78\74\52\111\103\54\82\76\72\70\122\115\65\118\89\85\70\82\97\86\65\113\51\98\110\98\76\99\73\69\121\107\47\101\48\71\102\72\106\76\75\105\78\89\102\76\68\105\112\110\115\52\81\88\97\115\53\112\89\99\110\122\82\82\109\106\81\47\103\54\57\75\84\101\80\79\108\69\81\80\106\105\75\83\86\87\68\90\86\120\90\122\114\112\121\47\118\85\57\70\115\87\116\102\56\82\78\97\101\109\78\68\121\77\110\116\108\74\115\48\100\68\52\78\86\88\66\57\118\55\110\47\55\98\106\105\70\56\81\48\120\98\97\99\67\87\54\86\67\73\83\105\53\56\86\109\115\109\122\51\86\122\88\117\117\100\87\51\90\48\102\101\102\47\65\79\81\55\90\55\107\122\65\72\101\100\54\103\122\49\119\81\51\115\120\77\81\74\74\65\111\74\85\99\72\81\69\116\104\69\107\116\66\70\90\69\78\57\113\89\107\101\65\49\79\43\51\72\82\66\119\103\120\121\104\108\110\50\113\84\111\116\108\113\117\54\53\65\105\66\108\75\74\79\76\54\74\80\52\89\84\51\122\73\102\47\109\109\99\121\116\110\47\53\122\85\89\43\109\54\97\101\72\73\84\107\81\83\113\43\86\71\102\74\48\72\75\121\73\117\120\47\48\90\103\47\84\71\57\54\112\75\49\108\76\117\77\121\110\102\67\51\65\54\71\48\102\122\77\85\111\47\72\55\100\68\65\56\88\80\111\87\85\67\86\106\75\55\111\111\66\76\48\113\102\73\118\76\72\70\107\97\90\106\86\120\48\111\65\111\103\120\68\109\73\86\105\84\104\53\77\74\76\104\56\55\112\110\86\81\115\85\74\82\69\66\104\82\88\52\118\84\112\109\105\78\51\112\112\43\104\73\115\116\83\88\82\109\73\84\121\83\100\89\122\78\77\115\55\56\50\99\49\112\65\119\50\107\77\112\109\117\102\100\49\86\90\101\108\79\103\68\117\54\50\52\110\47\65\83\48\121\51\98\82\77\89\117\118\71\88\47\55\119\54\72\77\121\108\105\88\111\90\73\55\77\72\107\54\122\77\73\72\47\51\81\53\82\107\109\66\110\49\118\98\106\101\98\100\75\119\71\101\84\71\97\103\82\118\77\84\51\67\89\99\84\82\103\88\49\72\85\72\47\119\70\85\68\69\68\104\101\84\99\81\82\52\122\57\103\86\71\88\99\54\65\47\105\81\67\111\122\83\100\97\97\105\118\102\86\88\56\115\76\87\100\68\118\88\108\56\118\118\67\71\105\101\56\73\117\115\53\83\114\48\97\114\73\82\88\76\56\77\115\122\83\84\102\105\72\66\119\66\99\65\98\78\112\76\74\103\90\118\117\115\72\54\73\77\113\80\74\54\79\111\78\77\68\119\86\52\90\66\77\69\77\84\97\118\71\71\108\105\82\120\47\73\76\66\89\57\70\84\68\79\74\122\112\84\121\70\85\112\72\73\112\118\65\43\83\67\71\112\117\57\113\121\55\106\90\112\101\86\73\57\105\43\115\99\48\116\43\98\56\80\102\85\85\43\97\65\65\84\66\112\72\88\116\73\54\54\75\78\98\115\79\122\103\113\112\79\113\72\81\51\113\109\97\66\47\66\68\105\83\77\121\100\117\85\71\49\89\111\47\56\49\107\121\83\105\47\121\54\55\78\54\69\77\71\67\85\84\43\76\66\88\85\49\121\54\119\66\73\119\121\72\105\116\85\89\57\55\75\71\79\120\72\47\108\97\89\86\70\48\86\117\105\110\97\90\119\57\72\85\100\122\73\83\49\97\65\82\104\50\105\78\101\120\54\48\72\48\66\49\85\76\88\52\90\49\102\57\90\67\100\72\99\86\75\56\78\115\49\68\67\103\97\72\98\79\108\72\73\90\71\75\108\78\80\101\83\106\118\98\70\75\117\111\121\69\100\107\103\69\65\102\104\110\77\111\120\87\109\83\85\54\84\90\110\53\48\69\114\56\109\57\90\110\107\70\85\97\112\89\78\77\97\54\119\85\75\87\120\87\90\55\78\67\89\55\118\66\56\116\70\49\107\108\65\80\115\83\106\121\88\69\101\72\88\113\65\119\97\56\43\47\79\51\69\106\51\121\54\56\50\87\49\56\43\89\110\52\67\104\71\56\76\84\72\43\83\56\54\98\48\105\113\98\87\90\85\52\111\75\102\74\102\73\57\104\85\76\74\88\107\74\48\119\89\105\106\51\49\103\52\78\110\49\100\111\73\53\89\97\51\80\120\67\65\120\65\57\85\55\76\99\47\119\52\83\55\54\100\99\85\54\71\56\116\122\72\67\114\43\89\79\101\67\74\118\52\80\81\71\106\99\43\117\85\70\118\83\57\89\69\102\109\122\97\103\106\77\107\115\87\115\90\119\99\84\113\108\54\107\121\75\119\110\43\121\81\105\70\122\68\83\79\100\104\120\109\65\104\97\54\97\111\98\43\99\75\110\116\71\80\85\67\69\53\76\77\68\73\83\115\87\57\69\67\113\84\107\47\52\85\81\111\101\66\68\104\56\116\107\100\97\84\53\89\101\104\66\54\90\84\77\118\112\121\99\81\98\88\71\73\86\69\102\88\107\89\74\116\113\98\49\98\65\74\103\116\82\120\109\72\75\57\110\48\121\72\65\103\77\107\111\85\72\119\80\66\55\106\49\81\52\74\86\82\108\68\90\88\65\69\73\49\53\53\98\103\114\78\85\74\108\119\111\104\76\100\52\80\110\83\121\97\101\86\107\67\85\90\47\49\114\77\104\48\114\50\50\114\65\69\82\100\71\104\78\50\56\54\75\112\50\72\52\77\66\121\53\71\71\109\49\118\72\115\81\105\80\109\110\114\120\70\103\77\82\75\90\79\66\109\110\106\100\78\105\75\102\52\54\73\54\102\81\98\99\108\105\122\65\69\74\66\120\81\121\101\88\114\67\51\80\118\43\84\120\70\77\121\117\43\43\108\79\70\113\80\49\117\65\69\73\76\56\101\52\72\50\108\98\73\80\78\68\106\109\110\117\77\98\73\99\48\74\102\105\48\122\83\89\105\82\118\67\80\77\99\57\71\85\70\84\103\78\90\53\104\77\115\82\104\71\80\104\73\82\56\43\82\74\120\83\75\70\111\77\121\120\108\83\90\112\90\105\66\48\90\90\83\87\57\118\107\113\52\78\118\78\97\47\88\107\49\57\100\67\68\50\76\113\88\117\75\107\51\53\86\47\66\57\117\114\104\76\115\87\111\101\109\69\78\66\55\57\81\49\86\51\89\119\97\104\83\56\78\101\112\70\52\118\99\47\118\101\68\77\76\82\116\73\97\116\52\52\79\110\122\97\118\57\51\101\49\111\110\109\102\116\107\112\50\122\82\85\75\68\48\119\68\107\88\65\51\70\57\51\43\77\75\117\72\116\82\52\78\74\79\56\89\121\103\65\55\115\69\105\106\110\98\55\71\71\84\87\111\87\55\90\88\97\86\49\122\122\108\50\79\112\54\65\115\100\49\69\122\111\99\72\86\57\56\85\87\105\68\85\49\82\113\74\47\81\75\80\69\122\113\66\100\81\65\48\99\65\100\76\50\86\89\72\72\75\47\74\86\98\103\98\77\99\86\112\73\66\83\65\116\109\73\47\72\73\69\82\69\74\85\72\65\110\106\73\116\56\99\106\103\106\52\101\66\49\53\65\49\86\87\72\103\100\81\118\75\86\52\89\52\106\112\81\80\43\66\78\66\114\98\84\47\53\109\97\121\90\48\84\69\118\48\54\116\79\50\111\84\111\90\71\81\121\103\76\89\49\56\68\53\104\55\106\48\120\56\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
